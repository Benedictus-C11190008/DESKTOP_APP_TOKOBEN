/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tokoben;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedOutputStream;
import java.util.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.ListSelectionModel;
import static javax.swing.ListSelectionModel.SINGLE_SELECTION;
import org.json.JSONArray;
import org.json.JSONObject;


/**
 *
 * @author Gio
 */
public class homepage extends javax.swing.JFrame {
    
    String tvitem_id, tvitem_name, tvitem_price, tvitem_stock, tvitem_desc, getitem_id, getitem_name, getitem_desc, newitem_name, newitem_desc, newitem_price, newitem_stock, gett_id;
    Integer getitem_price, getitem_stock;
    
    List<Integer> listitem_id = new ArrayList<>();
    List<String> listitem_name = new ArrayList<>();
    List<Integer> listitem_price = new ArrayList<>();
    List<Integer> listitem_stock = new ArrayList<>();
    List<String> listitem_desc = new ArrayList<>();
    
    List<Integer> listtr_id = new ArrayList<>();

    /**
     * Creates new form homepage
     */
    public homepage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        item_idcbox = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        insedit_item_name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        insedit_item_price = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        insedit_item_stock = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        insedit_item_desc = new javax.swing.JTextArea();
        updateitembutton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        t_idcbox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        statuscbox = new javax.swing.JComboBox<>();
        updatetransbutton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        additembutton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        insdesc = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        insname = new javax.swing.JTextField();
        insprice = new javax.swing.JTextField();
        insstock = new javax.swing.JTextField();
        pricewarning = new javax.swing.JLabel();
        stockwarning = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Item Price", "Item Stock", "Item Desc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel21.setText("Item ID:");

        item_idcbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        item_idcbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_idcboxActionPerformed(evt);
            }
        });

        jLabel22.setText("Item Name:");

        insedit_item_name.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        insedit_item_name.setPreferredSize(new java.awt.Dimension(150, 25));
        insedit_item_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insedit_item_nameActionPerformed(evt);
            }
        });

        jLabel8.setText("Item Price:");

        insedit_item_price.setPreferredSize(new java.awt.Dimension(50, 22));
        insedit_item_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insedit_item_priceActionPerformed(evt);
            }
        });

        jLabel9.setText("Item Stock");

        insedit_item_stock.setPreferredSize(new java.awt.Dimension(50, 22));

        jLabel10.setText("Item Desc:");

        insedit_item_desc.setColumns(20);
        insedit_item_desc.setRows(5);
        jScrollPane5.setViewportView(insedit_item_desc);

        updateitembutton.setText("Update");
        updateitembutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateitembuttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insedit_item_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insedit_item_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(insedit_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(jLabel10)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(updateitembutton))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(item_idcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateitembutton)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(item_idcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel22)
                                        .addComponent(insedit_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insedit_item_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(insedit_item_stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Item List", jPanel5);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Trans. ID", "Name", "Address", "Telp", "Item Amount", "Item Price", "Status"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        jLabel19.setText("Transaction ID:");

        t_idcbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel20.setText("Status:");

        statuscbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paid", "Sent", "Finished" }));

        updatetransbutton.setText("Update");
        updatetransbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatetransbuttonMouseClicked(evt);
            }
        });
        updatetransbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetransbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addComponent(t_idcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statuscbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updatetransbutton)
                .addGap(17, 17, 17))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatetransbutton)
                    .addComponent(statuscbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(t_idcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Transaction List", jPanel6);

        additembutton.setText("Add");
        additembutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                additembuttonMouseClicked(evt);
            }
        });
        additembutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additembuttonActionPerformed(evt);
            }
        });

        insdesc.setColumns(20);
        insdesc.setRows(5);
        jScrollPane2.setViewportView(insdesc);

        jLabel15.setText("Item Desc:");

        jLabel16.setText("Item Stock:");

        jLabel17.setText("Item Price:");

        jLabel18.setText("Item Name:");

        insname.setPreferredSize(new java.awt.Dimension(200, 22));
        insname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insnameActionPerformed(evt);
            }
        });

        insprice.setPreferredSize(new java.awt.Dimension(50, 22));
        insprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inspriceActionPerformed(evt);
            }
        });
        insprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inspriceKeyTyped(evt);
            }
        });

        insstock.setPreferredSize(new java.awt.Dimension(50, 22));
        insstock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insstockActionPerformed(evt);
            }
        });
        insstock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                insstockKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(insname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(insstock, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                    .addComponent(insprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(pricewarning))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(stockwarning)))))))
                .addContainerGap(351, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(additembutton)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(insname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(insprice, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricewarning))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(insstock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockwarning))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addComponent(additembutton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Item", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        jTabbedPane1 = (JTabbedPane) evt.getSource();
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        switch (selectedIndex) {
            case 0 -> {
                listitem_id.clear();
                List<DataModel> username = new ArrayList<>();
                String data;
                try {
                    data = ServerConnect("http://localhost:8000/item", "GET");
                    JSONArray myrec = null;

                    //                    JANGAN LUPA TRY CATCH
                    myrec = new JSONArray(data);
                    for(int i = 0; i<myrec.length(); i++){
                        JSONObject arrObj  = myrec.getJSONObject(i);
                        DataModel getData = new DataModel (arrObj.getInt("item_id"), arrObj.getString("item_name"), arrObj.getInt("item_price"), arrObj.getInt("item_stock"), arrObj.getString("item_desc"));
                        username.add(getData);
                        listitem_id.add(arrObj.getInt("item_id"));
                    }

                    TableElement element = new TableElement(username);
                    jTable1.setModel(element);
                    jTable1.setRowSelectionAllowed(true);
                    jTable1.setAutoCreateColumnsFromModel(true);

                    jTable1.getTableHeader().setReorderingAllowed(false);
                    
                    

                    //                    /jTable1.setSelectionMode(ListSelectionModel).(SINGLE_SELECTION);

                } catch (Exception ex) {
                    Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                DefaultComboBoxModel itemidcbox = new DefaultComboBoxModel(listitem_id.toArray());
                item_idcbox.setModel(itemidcbox);
                
                item_idcbox.addActionListener((ActionEvent e) ->{
                    getitem_id = item_idcbox.getSelectedItem().toString();
                    insedit_item_name.setText("");
                    listitem_name.clear();
                    listitem_price.clear();
                    listitem_stock.clear();
                    listitem_desc.clear();
                    
                    Integer getintitem_id = Integer.parseInt(getitem_id);
                    String data2;
                    try {
                        data2 = ServerConnect("http://localhost:8000/item/"+getitem_id, "GET");
                        System.out.println(data2);
                        JSONArray myrec = null;

                    //                    JANGAN LUPA TRY CATCH
                        myrec = new JSONArray(data2);
                        System.out.println("test");
                       
                        JSONObject arrObj  = myrec.getJSONObject(0);
                        getitem_name = arrObj.getString("item_name");
                        getitem_price = arrObj.getInt("item_price");
                        getitem_stock = arrObj.getInt("item_stock");
                        getitem_desc = arrObj.getString("item_desc");
                            
//                        listitem_name.add(getitem_name);
//                        listitem_price.add(getitem_price);
//                        listitem_stock.add(getitem_stock);
//                        listitem_desc.add(getitem_desc);
                        System.out.println(getitem_name);
                        
                        System.out.println(getintitem_id);
                        insedit_item_name.setText(getitem_name);
                        insedit_item_price.setText(getitem_price.toString());
                        insedit_item_stock.setText(getitem_stock.toString());
                        insedit_item_desc.setText(getitem_desc);
                        
                        
                        
                     
                        
                    } catch (Exception ex) {
                        Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                });
                
                
            }
            case 1 ->{
                   List<tr_DataModel> transactions = new ArrayList<>();
                   String data3;
            try {
                data3 = ServerConnect("http://localhost:8000/alltransactions", "GET");
                JSONArray myrec = null;
                myrec = new JSONArray(data3);
                for(int i = 0; i<myrec.length(); i++){
                    JSONObject arrObj  = myrec.getJSONObject(i);
                    tr_DataModel getData3 = new tr_DataModel (arrObj.getInt("master_transaction_id"), arrObj.getString("name"),arrObj.getString("address"), arrObj.getString("telp"), arrObj.getInt("item_amount"), arrObj.getInt("item_price"), arrObj.getString("status"));
                    transactions.add(getData3);
                    listtr_id.add(arrObj.getInt("master_transaction_id"));
                    }
//
                    trTableElement element = new trTableElement(transactions);
                    jTable2.setModel(element);
                    jTable2.setRowSelectionAllowed(true);
                    jTable2.setAutoCreateColumnsFromModel(true);

                    jTable2.getTableHeader().setReorderingAllowed(false);
                
            } catch (Exception ex) {
                Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            DefaultComboBoxModel tridcbox = new DefaultComboBoxModel(listtr_id.toArray());
            t_idcbox.setModel(tridcbox);
            t_idcbox.addActionListener((ActionEvent e)->{
                gett_id = t_idcbox.getSelectedItem().toString();
                
                Integer getintt_id = Integer.parseInt(gett_id);
                
            });
            
            }


        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void insstockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_insstockKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(!(Character.isDigit(c) | (c == KeyEvent.VK_BACK_SPACE))){
            getToolkit().beep();
            evt.consume();
            stockwarning.setForeground(Color.RED);
            stockwarning.setText("Insert Numbers Only");
        }

        else{
            stockwarning.setText("");
        }
    }//GEN-LAST:event_insstockKeyTyped

    private void insstockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insstockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insstockActionPerformed

    private void inspriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inspriceKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(!(Character.isDigit(c) | (c == KeyEvent.VK_BACK_SPACE))){
            getToolkit().beep();
            evt.consume();
            pricewarning.setForeground(Color.RED);
            pricewarning.setText("Insert Numbers Only");
        }

        else{
            pricewarning.setText("");
        }
    }//GEN-LAST:event_inspriceKeyTyped

    private void inspriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inspriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inspriceActionPerformed

    private void insnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insnameActionPerformed

    private void additembuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additembuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_additembuttonActionPerformed

    private void additembuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_additembuttonMouseClicked
        // TODO add your handling code here:
        String url = "http://localhost:8000/item/add";
        tvitem_name = insname.getText();
        tvitem_price = insprice.getText();
        tvitem_stock = insstock.getText();
        tvitem_desc = insdesc.getText();

        if(tvitem_name.equals("") || tvitem_price.equals("") || tvitem_stock.equals("") || tvitem_stock.equals("")){
            Warning("Please Insert All Box","Not Complete");
        }
        else{
            try{
                String srun = ServerConnect("http://localhost:8000/item/add","POST");
                if(srun.equals("finish")){
                    Warning("Item Added","Success");
                }
                else{
                    Warning("Error, Item Not Added","Error");
                }
            } catch (Exception ex) {
                Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_additembuttonMouseClicked

    private void updatetransbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetransbuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatetransbuttonActionPerformed

    private void insedit_item_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insedit_item_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insedit_item_nameActionPerformed

    private void item_idcboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_idcboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_item_idcboxActionPerformed

    private void insedit_item_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insedit_item_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insedit_item_priceActionPerformed

    private void updateitembuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateitembuttonMouseClicked
        
        newitem_name = insedit_item_name.getText();
        newitem_price = insedit_item_price.getText();
        newitem_stock = insedit_item_stock.getText();
        newitem_desc= insedit_item_desc.getText();
        try {
            // TODO add your handling code here:
            String srun = ServerConnect("http://localhost:8000/item/edit/"+getitem_id,"POSTITEM");
            if(srun.equals("finish")){
                    Warning("Item Edited","Success");
                }
                else{
                    Warning("Error, Item Not Changed","Error");
                }
            
            List<DataModel> username = new ArrayList<>();
                String data;
                try {
                    data = ServerConnect("http://localhost:8000/item", "GET");
                    JSONArray myrec = null;

                    myrec = new JSONArray(data);
                    for(int i = 0; i<myrec.length(); i++){
                        JSONObject arrObj  = myrec.getJSONObject(i);
                        DataModel getData = new DataModel (arrObj.getInt("item_id"), arrObj.getString("item_name"), arrObj.getInt("item_price"), arrObj.getInt("item_stock"), arrObj.getString("item_desc"));
                        username.add(getData);
                        listitem_id.add(arrObj.getInt("item_id"));
                    }

                    TableElement element = new TableElement(username);
                    jTable1.setModel(element);
                    jTable1.setRowSelectionAllowed(true);
                    jTable1.setAutoCreateColumnsFromModel(true);

                    jTable1.getTableHeader().setReorderingAllowed(false);
                    
                    


                } catch (Exception ex) {
                    Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        } catch (Exception ex) {
            Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_updateitembuttonMouseClicked

    private void updatetransbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatetransbuttonMouseClicked
        // TODO add your handling code here:
        String getstatus = statuscbox.getSelectedItem().toString();
        try {
            String srun = ServerConnect("http://localhost:8000/transactions/status/"+gett_id,"POSTSTATUS");
            if(srun.equals("finish")){
                    Warning("Status Updated","Success");
                }
                else{
                    Warning("Error, Status Not Changed","Error");
                }
        } catch (Exception ex) {
            Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        List<tr_DataModel> transactions = new ArrayList<>();
                   String data3;
            try {
                data3 = ServerConnect("http://localhost:8000/alltransactions", "GET");
                JSONArray myrec = null;
                myrec = new JSONArray(data3);
                for(int i = 0; i<myrec.length(); i++){
                    JSONObject arrObj  = myrec.getJSONObject(i);
                    tr_DataModel getData3 = new tr_DataModel (arrObj.getInt("master_transaction_id"), arrObj.getString("name"),arrObj.getString("address"), arrObj.getString("telp"), arrObj.getInt("item_amount"), arrObj.getInt("item_price"), arrObj.getString("status"));
                    transactions.add(getData3);
                    listtr_id.add(arrObj.getInt("master_transaction_id"));
                    }
//
                    trTableElement element = new trTableElement(transactions);
                    jTable2.setModel(element);
                    jTable2.setRowSelectionAllowed(true);
                    jTable2.setAutoCreateColumnsFromModel(true);

                    jTable2.getTableHeader().setReorderingAllowed(false);
                
            } catch (Exception ex) {
                Logger.getLogger(homepage.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_updatetransbuttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton additembutton;
    private javax.swing.JTextArea insdesc;
    private javax.swing.JTextArea insedit_item_desc;
    private javax.swing.JTextField insedit_item_name;
    private javax.swing.JTextField insedit_item_price;
    private javax.swing.JTextField insedit_item_stock;
    private javax.swing.JTextField insname;
    private javax.swing.JTextField insprice;
    private javax.swing.JTextField insstock;
    private javax.swing.JComboBox<String> item_idcbox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel pricewarning;
    private javax.swing.JComboBox<String> statuscbox;
    private javax.swing.JLabel stockwarning;
    private javax.swing.JComboBox<String> t_idcbox;
    private javax.swing.JButton updateitembutton;
    private javax.swing.JButton updatetransbutton;
    // End of variables declaration//GEN-END:variables

public String ServerConnect(String url, String method) throws Exception{
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        if (method.equals("GET")) {
            con.setRequestMethod("GET");
            con.setRequestProperty("User-Agent","Mozzila/5.0");
            StringBuffer response;
            try (BufferedReader in = new BufferedReader (
                    new InputStreamReader(con.getInputStream())
            )) {
                String input;
                response = new StringBuffer();
                while ((input=in.readLine())!=null) {
                    response.append(input);
                }
            }
            return response.toString();
        }
        else if (method.equals("POST")){
            con.setRequestMethod(method);
            con.setRequestProperty("User-Agent","Mozilla/5.0");
            con.setRequestProperty("Content-type", "application/json");
            con.setRequestProperty("Accept", "aplication/json");
            con.setDoOutput(true);
            con.setDoInput(true);
            
            JSONObject data = new JSONObject();
            data.put("item_name", tvitem_name);
            data.put("item_price", tvitem_price);
            data.put("item_stock", tvitem_stock);
            data.put("item_desc", tvitem_desc);
            
            OutputStream os = new BufferedOutputStream(con.getOutputStream());
            try (BufferedWriter out = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))) {
                out.write(data.toString());
                out.flush();
                out.close();
            }
                  
            StringBuffer response;
            try (BufferedReader in = new BufferedReader (
                    new InputStreamReader(con.getInputStream())
            )) {
                String input;
                response = new StringBuffer();
                while ((input=in.readLine())!=null) {
                    response.append(input);
                }
            }
            return response.toString();
        
        }
        else if (method.equals("POSTITEM")){
            con.setRequestMethod("POST");
            con.setRequestProperty("User-Agent","Mozilla/5.0");
            con.setRequestProperty("Content-type", "application/json");
            con.setRequestProperty("Accept", "aplication/json");
            con.setDoOutput(true);
            con.setDoInput(true);
            
            JSONObject data = new JSONObject();
            data.put("item_name", newitem_name);
            data.put("item_price", newitem_price);
            data.put("item_stock", newitem_stock);
            data.put("item_desc", newitem_desc);
            System.out.println("POST TO ITEM: "+newitem_name);
            System.out.println("POST TO ITEM: "+newitem_price);
            System.out.println("POST TO ITEM: "+newitem_stock);
            System.out.println("POST TO ITEM: "+newitem_desc);
            
            OutputStream os = new BufferedOutputStream(con.getOutputStream());
            try (BufferedWriter out = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))) {
                out.write(data.toString());
                out.flush();
                out.close();
            }
                  
            StringBuffer response;
            try (BufferedReader in = new BufferedReader (
                    new InputStreamReader(con.getInputStream())
            )) {
                String input;
                response = new StringBuffer();
                while ((input=in.readLine())!=null) {
                    response.append(input);
                }
            }
            System.out.println("yow");
            return response.toString();
        
        }
        
        else if (method.equals("POSTSTATUS")){
            con.setRequestMethod("POST");
            con.setRequestProperty("User-Agent","Mozilla/5.0");
            con.setRequestProperty("Content-type", "application/json");
            con.setRequestProperty("Accept", "aplication/json");
            con.setDoOutput(true);
            con.setDoInput(true);
            
            JSONObject data = new JSONObject();
            data.put("status", statuscbox.getSelectedItem().toString());
          
            
            OutputStream os = new BufferedOutputStream(con.getOutputStream());
            try (BufferedWriter out = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))) {
                out.write(data.toString());
                out.flush();
                out.close();
            }
                  
            StringBuffer response;
            try (BufferedReader in = new BufferedReader (
                    new InputStreamReader(con.getInputStream())
            )) {
                String input;
                response = new StringBuffer();
                while ((input=in.readLine())!=null) {
                    response.append(input);
                }
            }
            System.out.println("yow2");
            return response.toString();
        
        }
        return null;
    }

    private void Warning(String WarningMessage, String title) {
        JOptionPane.showMessageDialog(null, WarningMessage, "" + title, JOptionPane.INFORMATION_MESSAGE);
    }
}
